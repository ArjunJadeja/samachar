package com.arjun.samachar.utils

import com.arjun.samachar.data.model.CountriesResponse
import com.arjun.samachar.data.model.Country

object CountryHelper {

    private val countries = listOf(
        Country("AR", "Argentina", "ðŸ‡¦ðŸ‡·"),
        Country("AU", "Australia", "ðŸ‡¦ðŸ‡º"),
        Country("AT", "Austria", "ðŸ‡¦ðŸ‡¹"),
        Country("BE", "Belgium", "ðŸ‡§ðŸ‡ª"),
        Country("BR", "Brazil", "ðŸ‡§ðŸ‡·"),
        Country("BG", "Bulgaria", "ðŸ‡§ðŸ‡¬"),
        Country("CA", "Canada", "ðŸ‡¨ðŸ‡¦"),
        Country("CN", "China", "ðŸ‡¨ðŸ‡³"),
        Country("CO", "Colombia", "ðŸ‡¨ðŸ‡´"),
        Country("CU", "Cuba", "ðŸ‡¨ðŸ‡º"),
        Country("CZ", "Czech Republic", "ðŸ‡¨ðŸ‡¿"),
        Country("EG", "Egypt", "ðŸ‡ªðŸ‡¬"),
        Country("FR", "France", "ðŸ‡«ðŸ‡·"),
        Country("DE", "Germany", "ðŸ‡©ðŸ‡ª"),
        Country("GR", "Greece", "ðŸ‡¬ðŸ‡·"),
        Country("HK", "Hong Kong", "ðŸ‡­ðŸ‡°"),
        Country("HU", "Hungary", "ðŸ‡­ðŸ‡º"),
        Country("IN", "India", "ðŸ‡®ðŸ‡³"),
        Country("ID", "Indonesia", "ðŸ‡®ðŸ‡©"),
        Country("IE", "Ireland", "ðŸ‡®ðŸ‡ª"),
        Country("IL", "Israel", "ðŸ‡®ðŸ‡±"),
        Country("IT", "Italy", "ðŸ‡®ðŸ‡¹"),
        Country("JP", "Japan", "ðŸ‡¯ðŸ‡µ"),
        Country("LV", "Latvia", "ðŸ‡±ðŸ‡»"),
        Country("LT", "Lithuania", "ðŸ‡±ðŸ‡¹"),
        Country("MY", "Malaysia", "ðŸ‡²ðŸ‡¾"),
        Country("MA", "Morocco", "ðŸ‡²ðŸ‡¦"),
        Country("MX", "Mexico", "ðŸ‡²ðŸ‡½"),
        Country("NL", "Netherlands", "ðŸ‡³ðŸ‡±"),
        Country("NZ", "New Zealand", "ðŸ‡³ðŸ‡¿"),
        Country("NG", "Nigeria", "ðŸ‡³ðŸ‡¬"),
        Country("NO", "Norway", "ðŸ‡³ðŸ‡´"),
        Country("PH", "Philippines", "ðŸ‡µðŸ‡­"),
        Country("PL", "Poland", "ðŸ‡µðŸ‡±"),
        Country("PT", "Portugal", "ðŸ‡µðŸ‡¹"),
        Country("RO", "Romania", "ðŸ‡·ðŸ‡´"),
        Country("RU", "Russia", "ðŸ‡·ðŸ‡º"),
        Country("SA", "Saudi Arabia", "ðŸ‡¸ðŸ‡¦"),
        Country("RS", "Serbia", "ðŸ‡·ðŸ‡¸"),
        Country("SG", "Singapore", "ðŸ‡¸ðŸ‡¬"),
        Country("SK", "Slovakia", "ðŸ‡¸ðŸ‡°"),
        Country("SI", "Slovenia", "ðŸ‡¸ðŸ‡®"),
        Country("ZA", "South Africa", "ðŸ‡¿ðŸ‡¦"),
        Country("KR", "South Korea", "ðŸ‡°ðŸ‡·"),
        Country("ES", "Spain", "ðŸ‡ªðŸ‡¸"),
        Country("SE", "Sweden", "ðŸ‡¸ðŸ‡ª"),
        Country("CH", "Switzerland", "ðŸ‡¨ðŸ‡­"),
        Country("TW", "Taiwan", "ðŸ‡¹ðŸ‡¼"),
        Country("TH", "Thailand", "ðŸ‡¹ðŸ‡­"),
        Country("TR", "Turkey", "ðŸ‡¹ðŸ‡·"),
        Country("UA", "Ukraine", "ðŸ‡ºðŸ‡¦"),
        Country("AE", "United Arab Emirates", "ðŸ‡¦ðŸ‡ª"),
        Country("GB", "United Kingdom", "ðŸ‡¬ðŸ‡§"),
        Country("US", "United States", "ðŸ‡ºðŸ‡¸"),
        Country("VE", "Venezuela", "ðŸ‡»ðŸ‡ª")
    )

    fun getCountries(): CountriesResponse {
        return CountriesResponse(
            pageSize = countries.size,
            pageNo = 1,
            totalItems = countries.size,
            countries = countries
        )
    }

    fun getCountries(pageSize: Int, pageNo: Int): CountriesResponse {
        val totalItems = countries.size
        val fromIndex = pageSize * (pageNo - 1)
        if (fromIndex >= totalItems) {
            return CountriesResponse(pageSize, pageNo, totalItems, emptyList())
        }
        val toIndex = minOf(fromIndex + pageSize, totalItems)
        val paginatedCountries = countries.subList(fromIndex, toIndex)
        return CountriesResponse(pageSize, pageNo, totalItems, paginatedCountries)
    }

}